# ========================================
# NeoMate AI Project .gitignore
# ========================================
# এই ফাইলটি প্রজেক্টের রিপোজিটরিকে পরিষ্কার, সুরক্ষিত এবং প্রফেশনাল রাখার জন্য তৈরি।
# সব অপ্রয়োজনীয়, সংবেদনশীল বা অটো-জেনারেটেড ফাইল ইগনোর করা হয়েছে।
# ক্যাটাগরি অনুসারে সাজানো, যাতে ভবিষ্যতে আপডেট সহজ হয়।
# নোট: এই ফাইলটি রেগুলারলি রিভিউ করুন এবং প্রয়োজন অনুসারে আপডেট করুন।
# যদি নতুন ক্যাটাগরি যোগ করতে হয় (যেমন নতুন OS বা টুল), তাহলে এখানে যোগ করুন।
# উদাহরণ: AI মডেল ফাইল যদি সংবেদনশীল হয়, তাহলে models/ ইগনোর করুন।
# কাস্টম ইগনোর: প্রজেক্টের নির্দিষ্ট ফাইল যদি ইগনোর করতে হয়, তাহলে যোগ করুন (যেমন large_data/ যদি থাকে)।
# বিভিন্ন অ্যাঙ্গেল থেকে বিবেচনা: সিকিউরিটি (সংবেদনশীল ডেটা), পারফরম্যান্স (ক্যাশ ফাইল), ক্রস-প্ল্যাটফর্ম (OS ফাইল), এবং ভবিষ্যত প্রসারণ (কমেন্ট এবং নোট)।
# এরর প্রিভেনশন: কোনো ভুল ইগনোর না হয় তা নিশ্চিত করার জন্য কমেন্ট যোগ করা হয়েছে, এবং ডেভেলপারদের জন্য গাইডলাইন দেওয়া হয়েছে।
# অ্যাডভান্স ফিচার: AI/ML স্পেসিফিক প্যাটার্ন, কন্টেইনারাইজেশন, ডেভেলপমেন্ট টুলস, CI/CD, এবং ক্লাউড ডিপ্লয়মেন্ট যোগ করা হয়েছে।
# সর্বোচ্চ মান: প্রফেশনাল, ইউনিক, এবং ভবিষ্যত-প্রুফ ডিজাইন। ডেভেলপারদের জন্য স্পষ্ট গাইডলাইন, উদাহরণ, এবং বিস্তারিত কমেন্ট যোগ করা হয়েছে।
# ডিটেইলস: প্রতিটি প্যাটার্নের কারণ এবং ব্যবহার বর্ণনা করা হয়েছে যাতে ডেভেলপাররা সহজেই বুঝতে পারেন এবং আপডেট করতে পারেন।
# উন্নতি: বিভিন্ন অ্যাঙ্গেল থেকে (সিকিউরিটি, পারফরম্যান্স, কম্প্যাটিবিলিটি) বিবেচনা করে যতটা সম্ভব কমপ্রিহেনসিভ এবং এরর-ফ্রি করা হয়েছে।

# ========================================
# 1. ব্যক্তিগত ডেটা এবং কনফিগারেশন (সিকিউরিটি জন্য ইগনোর)
# ========================================
# কনফিগ ফাইল যেখানে API কী, পাসওয়ার্ড বা ব্যক্তিগত সেটিংস থাকতে পারে (সিকিউরিটি রিস্ক এড়াতে)
config/
# ডেটা ফোল্ডার (মডেল, ক্যাশ, ইউজার ডেটা, AI ট্রেনিং ডেটা) – প্রাইভেসি এবং স্টোরেজ জন্য
data/
# লগ ফাইল (এরর, ডিবাগ লগ, AI প্রসেস লগ) – সংবেদনশীল তথ্য থাকতে পারে
logs/
# এনভায়রনমেন্ট ভেরিয়েবল ফাইল (সংবেদনশীল কী এবং সেটিংস) – লিক প্রিভেনশন
.env
.env.local
.env.production
.env.staging
.env.development
# ব্যক্তিগত কী ফাইল (সার্টিফিকেট, প্রাইভেট কী) – ক্রিপ্টোগ্রাফি সিকিউরিটি
*.pem
*.key
*.crt
# টেম্প ডেটা ফাইল (যদি কোনো টেম্প ডেটা থাকে) – ক্লিনআপ জন্য
temp_data/
# কাস্টম সেটিংস (যদি ইউজার-স্পেসিফিক) – পার্সোনালাইজেশন
user_settings/
# AI/ML স্পেসিফিক সংবেদনশীল ডেটা (যদি থাকে) – মডেল প্রাইভেসি
sensitive_models/
# ব্যাকআপ কনফিগ (যদি থাকে) – রিস্টোরেশন
backup_config/
# ইউজার প্রোফাইল ডেটা (প্রাইভেসি) – GDPR কমপ্লায়েন্স
user_profiles/
# সেশন ডেটা (যদি থাকে) – টেম্প স্টোরেজ
session_data/
# ক্লাউড কনফিগ (AWS, GCP ইত্যাদি) – ক্রেডেনশিয়ালস
.aws/
.gcp/
.azure/
# ডেটাবেস কনফিগ – সংবেদনশীল কানেকশন স্ট্রিং
db_config/

# ========================================
# 2. পাইথন ক্যাশে এবং বিল্ড ফাইল (অটো-জেনারেটেড)
# ========================================
# বাইটকোড ক্যাশ – পারফরম্যান্স অপটিমাইজেশন, কিন্তু রিপোজিটরিতে অপ্রয়োজনীয়
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
# ভার্চুয়াল এনভায়রনমেন্ট – লোকাল ডেভেলপমেন্ট, রিপোজিটরিতে না রাখা
env/
venv/
.venv/
ENV/
env.bak/
venv.bak/
# পাইপ ইনস্টল লগ এবং ডেটা – ইনস্টলেশন ট্রেস
pip-log.txt
pip-delete-this-directory.txt
# টেস্টিং কভারেজ এবং ক্যাশ – টেস্ট রেসাল্টস, ক্যাশ
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
# বিল্ড ডিরেক্টরি (প্যাকেজিং) – ডিস্ট্রিবিউশন
build/
dist/
*.egg-info/
.eggs/
# টুইস্টেড ট্রায়াল টেস্ট – অ্যাসিঙ্ক টেস্টিং
_trial_temp/
# মাইপাই টাইপ চেকার – টাইপ হিন্টিং
.mypy_cache/
.dmypy.json
dmypy.json
# সেলেরি টাস্ক কিউ – ব্যাকগ্রাউন্ড টাস্কস
celerybeat-schedule
celerybeat.pid
# সাজেস্টেড টেস্টিং ফ্রেমওয়ার্ক – ওয়েব স্ক্র্যাপিং
.scrapy
# পাইথন ডিস্ট্রিবিউশন – প্যাকেজ মেটাডেটা
MANIFEST
# পাইথন ইনস্টলার লগ – ইনস্টলেশন লগ
install.log
# কনডা এনভায়রনমেন্ট (যদি ব্যবহার হয়) – প্যাকেজ ম্যানেজমেন্ট
conda-env/
# পাইথন ডকুমেন্টেশন বিল্ড – ডকস জেনারেশন
docs/build/
# পাইথন প্রোফাইলার – পারফরম্যান্স অ্যানালাইসিস
*.prof
# পাইথন ডিবাগার – ডিবাগিং টুলস
.pdb

# ========================================
# 3. অপারেটিং সিস্টেম ফাইল (প্ল্যাটফর্ম-স্পেসিফিক)
# ========================================
# macOS – ফাইন্ডার মেটাডেটা
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
# Windows – থাম্বনেইলস এবং সিস্টেম ফাইল
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
# Linux – ব্যাকআপ ফাইল
*~
# সাধারণ টেম্প ফাইল – টেম্প ডেটা
*.tmp
*.temp
*.log
*.pid
*.seed
*.pid.lock
# সিস্টেম লগ – OS লগ
system.log
# ক্র্যাশ রিপোর্ট – এরর ডাম্প
*.dmp
# ফাইল সিস্টেম লক – কনকারেন্সি
.lockfile
# টেম্প ফাইল (বিভিন্ন অ্যাপ) – এডিটর টেম্প
*.swp
*.swo
# Windows সিস্টেম ফাইল – ডেস্কটপ ইনি
desktop.ini
# Linux কোর ডাম্প – ক্র্যাশ ডেটা
core
# Unix সকেট ফাইল – নেটওয়ার্কিং
*.sock
# FreeBSD – সিস্টেম ফাইল
*.core
# Solaris – কোর ফাইল
core.*
# Android – ডিভাইস স্পেসিফিক
*.apk
*.aab

# ========================================
# 4. IDE এবং এডিটর ফাইল (ডেভেলপমেন্ট টুলস)
# ========================================
# VSCode – কোড এডিটর সেটিংস
.vscode/
# PyCharm / IntelliJ – জাভা-বেসড IDE
.idea/
# Vim – টেক্সট এডিটর
*.swp
*.swo
*~
# Emacs – লিস্প-বেসড এডিটর
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*
# Sublime Text – লাইটওয়েট এডিটর
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project
# Atom – ওপেন সোর্স এডিটর
.atom/
# Eclipse – জাভা IDE
.project
.pydevproject
.settings/
# NetBeans – জাভা IDE
nbproject/private/
build/
nbbuild/
dist/
nbdist/
.nb-gradle/
# Jupyter Notebook – ইন্টারেক্টিভ নোটবুক
.ipynb_checkpoints
# Spyder – সায়েন্টিফিক পাইথন IDE
.spyderproject
.spyproject
# Visual Studio – মাইক্রোসফ্ট IDE
*.suo
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
# Xcode (যদি macOS ডেভেলপমেন্ট) – অ্যাপল IDE
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/
*.moved-aside
# Android Studio – অ্যান্ড্রয়েড ডেভেলপমেন্ট
.idea/
.gradle/
local.properties
*.iml
*.ipr
*.iws
# TextMate – macOS টেক্সট এডিটর
*.tmproj
*.tmproject
tmtags
# Brackets – অ্যাডোব এডিটর
.brackets.json
# Notepad++ – উইন্ডোজ এডিটর
*.bak
# Geany – লিনাক্স এডিটর
*.geany

# ========================================
# 5. অন্যান্য (মিসেলেনিয়াস এবং প্রজেক্ট-স্পেসিফিক)
# ========================================
# ডকুমেন্টেশন বিল্ড – ডকস জেনারেশন
docs/_build/
# টেম্প ডিরেক্টরি – টেম্প স্টোরেজ
tmp/
temp/
# ব্যাকআপ ফাইল – রিস্টোরেশন
*.bak
*.backup
# লক ফাইল – কনকারেন্সি
*.lock
# SQLite ডেটাবেস (যদি টেম্প হয়) – ডেটাবেস ফাইল
*.db-journal
# মডেল ক্যাশ (যদি ডাউনলোডেড হয়) – AI মডেল ক্যাশ
.cache/
# AI/ML স্পেসিফিক (মডেল ফাইল যদি টেম্প) – মেশিন লার্নিং মডেলস
*.h5
*.pkl
*.onnx
*.pt
*.pb
*.tflite
*.mlmodel
*.joblib
# ডকার (যদি ব্যবহার হয়) – কন্টেইনারাইজেশন
.dockerignore
# নোড জেএস (যদি ফ্রন্টেন্ড থাকে) – জাভাস্ক্রিপ্ট ডেভেলপমেন্ট
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
# গিট সাবমডিউল (যদি থাকে) – ভার্সন কন্ট্রোল
.gitmodules
# রিমোট কনফিগ – রিমোট ডেভেলপমেন্ট
.remote
# কন্টেইনার লগ – ডকার লগ
container_logs/
# প্রজেক্ট স্পেসিফিক টেম্প (যেমন AI টেস্ট ডেটা) – টেস্টিং
test_temp/
# বাইনারি ফাইল (যদি থাকে) – এক্সিকিউটেবলস
*.exe
*.dll
*.so
*.dylib
# কম্প্রেসড ফাইল (যদি টেম্প) – আর্কাইভস
*.zip
*.tar.gz
*.rar
# ইমেজ ফাইল (যদি টেম্প স্ক্রিনশট) – ভিজ্যুয়াল ডেটা
*.png
*.jpg
*.jpeg
*.gif
# ভিডিও ফাইল (যদি টেম্প রেকর্ডিং) – মাল্টিমিডিয়া
*.mp4
*.avi
*.mov
# অডিও ফাইল (যদি টেম্প রেকর্ডিং) – অডিও ডেটা
*.wav
*.mp3
*.flac
# লার্জ ডেটা ফাইল (যদি থাকে) – বিগ ডেটা
large_data/
# কাস্টম লগ (প্রজেক্ট স্পেসিফিক) – অ্যাপ লগ
custom_logs/
# টেস্ট রেসাল্ট – টেস্টিং আউটপুট
test_results/
# প্রোফাইলিং ডেটা – পারফরম্যান্স
profiling_data/
# CI/CD ফাইল (যেমন GitHub Actions) – অটোমেশন
.github/workflows/
# ক্লাউড ডিপ্লয়মেন্ট (Heroku, Vercel) – ডিপ্লয়মেন্ট
.vercel/
.netlify/
# লাইসেন্স ফাইল (যদি টেম্প) – লিগ্যাল
LICENSE.temp
# README ভ্যারিয়েন্ট – ডকুমেন্টেশন
README.md.bak

# ========================================
# 6. ভবিষ্যতের জন্য নোট এবং কাস্টম আপডেট
# ========================================
# যদি নতুন ক্যাটাগরি যোগ করতে হয় (যেমন নতুন OS বা টুল), তাহলে এখানে যোগ করুন।
# উদাহরণ: নতুন মডেল ফাইল যদি সংবেদনশীল হয়, তাহলে models/ ইগনোর করুন।
# এই ফাইলটি রেগুলারলি রিভিউ করুন যাতে কোনো ভুল ইগনোর না হয়।
# কাস্টম ইগনোর: প্রজেক্টের নির্দিষ্ট ফাইল যদি ইগনোর করতে হয়, তাহলে যোগ করুন (যেমন large_data/ যদি থাকে)।
# বিভিন্ন অ্যাঙ্গেল: সিকিউরিটি (সংবেদনশীল ডেটা), পারফরম্যান্স (ক্যাশ ফাইল), ক্রস-প্ল্যাটফর্ম (OS ফাইল), এবং ভবিষ্যত প্রসারণ (কমেন্ট এবং নোট)।
# এরর প্রিভেনশন: কোনো ভুল ইগনোর না হয় তা নিশ্চিত করার জন্য কমেন্ট যোগ করা হয়েছে, এবং ডেভেলপারদের জন্য গাইডলাইন দেওয়া হয়েছে।
# অ্যাডভান্স ফিচার: AI/ML স্পেসিফিক প্যাটার্ন, কন্টেইনারাইজেশন, ডেভেলপমেন্ট টুলস, CI/CD, এবং ক্লাউড ডিপ্লয়মেন্ট যোগ করা হয়েছে।
# সর্বোচ্চ মান: প্রফেশনাল, ইউনিক, এবং ভবিষ্যত-প্রুফ ডিজাইন। ডেভেলপারদের জন্য স্পষ্ট গাইডলাইন, উদাহরণ, এবং বিস্তারিত কমেন্ট যোগ করা হয়েছে।
# ডিটেইলস: প্রতিটি প্যাটার্নের কারণ এবং ব্যবহার বর্ণনা করা হয়েছে যাতে ডেভেলপাররা সহজেই বুঝতে পারেন এবং আপডেট করতে পারেন।
# উন্নতি: বিভিন্ন অ্যাঙ্গেল থেকে (সিকিউরিটি, পারফরম্যান্স, কম্প্যাটিবিলিটি) বিবেচনা করে যতটা সম্ভব কমপ্রিহেনসিভ এবং এরর-ফ্রি করা হয়েছে। যদি কোনো অতিরিক্ত ফিচার বা প্যাটার্ন প্রয়োজন হয়, তাহলে যোগ করুন।
